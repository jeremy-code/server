name: jeremyserver

services:
  vaultwarden:
    container_name: vaultwarden
    image: "vaultwarden/server:latest"
    restart: always
    environment:
      # Database settings
      DATABASE_URL: mysql://${mysql_config.admin_username}:${mysql_config.admin_password}@${mysql_config.host}:${mysql_config.port}/vaultwarden
      # General settings
      DOMAIN: "https://vault.${server_domain}"
      TRASH_AUTO_DELETE_DAYS: 90
      SIGNUPS_ALLOWED: false
    volumes:
      - "/mnt/oraclevdb/vaultwarden/:/data/"

  rclone:
    container_name: rclone
    image: "rclone/rclone:latest"
    restart: always
    command: serve webdav oos:${oos_config.bucket_name} --addr rclone:8080 --etag-hash auto --htpasswd /run/secrets/htpasswd
    volumes:
      - "/mnt/oraclevdb/rclone/:/data/"
    configs:
      - source: rclone-config
        target: /config/rclone/rclone.conf
    secrets:
      - htpasswd

  robots-txt:
    container_name: robots-txt
    image: busybox
    restart: always
    command: httpd -f -p 8001
    configs:
      - robots.txt
      - source: httpd-conf
        target: /etc/httpd.conf

  gatus:
    container_name: gatus
    image: ghcr.io/twin/gatus:latest
    restart: always
    depends_on:
      - vaultwarden
      - rclone
      - robots-txt
      - foldingathome
    volumes:
      - "/mnt/oraclevdb/gatus/:/data/"
    configs:
      - source: gatus-config
        target: /config/config.yaml

  cloudflared:
    container_name: cloudflared
    image: "cloudflare/cloudflared:latest"
    depends_on:
      - vaultwarden
      - rclone
      - robots-txt
      - gatus
    restart: always
    volumes:
      - "/mnt/oraclevdb/cloudflared:/user/nonroot/.cloudflared/"
    command: tunnel run
    configs:
      - source: cloudflared-config
        target: /etc/cloudflared/config.yml
    secrets:
      - source: cloudflared-credentials-file
        target: ${cloudflared_tunnel_id}.json

  foldingathome:
    container_name: foldingathome
    image: lscr.io/linuxserver/foldingathome:latest
    restart: always
    cpus: 2
    mem_limit: 12gb
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=America/Los_Angeles
      - CLI_ARGS=--config /run/configs/config.xml
    volumes:
      - /mnt/oraclevdb/foldingathome:/config/
    configs:
      - source: fah-config
        target: /run/configs/config.xml

configs:
  rclone-config:
    content: |
      [oos]
      # https://rclone.org/oracleobjectstorage/
      type = oracleobjectstorage
      provider = instance_principal_auth
      namespace = ${oos_config.namespace}
      compartment = ${oos_config.compartment_id}
      region = ${oos_config.region}
      storage_tier = ${oos_config.bucket_storage_tier}
      leave_parts_on_error = true
      attempt_resume_upload = true
      no_check_bucket = true
      description = "Remote provider for Oracle Object Storage buckets using instance principals authentication"
  httpd-conf:
    # https://github.com/mirror/busybox/blob/master/networking/httpd.c
    content: I:robots.txt
  robots.txt:
    content: |
      User-agent: *
      Disallow: /
  gatus-config:
    content: |
      storage:
        type: sqlite
        path: /data/data.db
        caching: true

      security:
        basic:
          username: "${gatus_config.username}"
          password-bcrypt-base64: "${gatus_config.encoded_hashed_password}"

      web:
        port: 8081

      .defs:
        .endpoints:
          - &default-endpoint
            enabled: true
            interval: 10m
          - &status-200
            <<: *default-endpoint
            conditions:
              - "[STATUS] == 200"
              - "[RESPONSE_TIME] < 1000"
          - &status-308
            <<: *default-endpoint
            client:
              ignore-redirect: true
            conditions:
              - "[STATUS] == 308"
              - "[RESPONSE_TIME] < 500"
          - &status-401
            <<: *default-endpoint
            conditions:
              - "[STATUS] == 401"
              - "[BODY] == 401 Unauthorized"
              - "[RESPONSE_TIME] < 1000"

      endpoints:
        # Core
        - name: Vaultwarden
          group: core
          url: "https://vault.jeremyserver.me/api/alive"
          <<: *status-200
          conditions: &vaultwarden-conditions
            - "[STATUS] == 200"
            - "[RESPONSE_TIME] < 1000"
            # ISO 8601 string is 27 characters long + 2 quotes
            - "len([BODY]) == 29"
        - name: Rclone
          group: core
          url: "https://webdav.jeremyserver.me"
          <<: *status-401
        - name: robots.txt
          group: core
          url: "https://jeremyserver.me/robots.txt"
          <<: *status-200
        # Internal
        - name: Vaultwarden (Internal)
          group: internal
          url: "http://vaultwarden:80/api/alive"
          <<: *status-200
          conditions: *vaultwarden-conditions
        - name: Rclone (Internal)
          group: internal
          url: "http://rclone:8080"
          <<: *status-401
        - name: robots.txt (Internal)
          group: internal
          url: "http://robots-txt:8001"
          <<: *status-200
        - name: Folding@home
          group: internal
          url: "http://foldingathome:7396"
          <<: *status-200
  cloudflared-config:
    content: |
      tunnel: ${cloudflared_tunnel_id}
      credentials-file: /run/secrets/${cloudflared_tunnel_id}.json

      warp-routing:
        enabled: true

      # tunnel run parameters
      edge-ip-version: auto
      region: us

      ingress:
        %{~ for subdomain in ["vault.", "webdav.", "status", ""] ~}
        - hostname: ${subdomain}${server_domain}/robots.txt
          service: http://robots-txt:8001
        %{~ endfor ~}
        - hostname: vault.${server_domain}
          service: http://vaultwarden:80
        - hostname: webdav.${server_domain}
          service: http://rclone:8080
        - hostname: status.${server_domain}
          service: http://gatus:8081
        - service: http_status:404
  fah-config:
    content: |
      <config>
        <!-- Account -->
        <account-token v='${fah_config.token}'/>
        <machine-name value='oracle-cloud'/>

        <!-- Logging -->
        <verbosity v='6'/>

        <!-- Resource settings -->
        <cpus v='2'/>

        <!-- User information -->
        <passkey v='${fah_config.passkey}'/>
        <team v='${fah_config.team}'/>
        <user v='${fah_config.user}'/>
      </config>

secrets:
  htpasswd:
    file: ./htpasswd
  cloudflared-credentials-file:
    file: ./cloudflared-credentials-file.json
