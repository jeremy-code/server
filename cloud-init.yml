#cloud-config

final_message: |
  ## template: jinja

  ───────────────────────────────────────
  cloud-init has finished running.

     Version: /usr/bin/cloud-init {{version}}
   Timestamp: {{timestamp}}
  Datasource: {{datasource}}
      Uptime: {{uptime}} seconds
  ───────────────────────────────────────

apt:
  sources:
    docker:
      source: >-
        deb [arch=arm64 signed-by=$KEY_FILE]
        https://download.docker.com/linux/ubuntu $RELEASE stable
      # Fingerprint for Docker's GPG key
      keyid: 9DC858229FC7DD38854AE2D88D81803C0EBFCD88
      # Equivalent to `gpg --keyserver https://download.docker.com/linux/ubuntu/gpg --receive-keys [keyid]`
      keyserver: "https://download.docker.com/linux/ubuntu/gpg"

mounts:
  - [
      /dev/oracleoci/oraclevdb,
      /mnt/oraclevdb,
      ext3,
      "defaults,_netdev,noatime",
      "0",
      "2",
    ]

package_update: true
package_upgrade: true
package_reboot_if_required: true

packages:
  - apt:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
  - snap:
      - [oracle-cloud-agent, --classic]

runcmd:
  # The `disk_setup` and `mounts` modules run in the "init" stage while the
  # "package_update_upgrade_install" module runs later in the "final" stage.
  # Since the Snap package `oracle-cloud-agent` is necessary to connect to
  # iSCSI-attached volumes, those modules cannot be used to create the
  # filesystem.
  - sudo mkfs.ext3 /dev/oracleoci/oraclevdb
  - sudo mount --all
  - sudo docker compose up --detach

# https://manpages.ubuntu.com/manpages/noble/en/man1/ssh-import-id.1.html
ssh_import_id:
  - "gh:jeremy-code"

timezone: "America/Los_Angeles"

user:
  name: "jeremy"
  gecos: "Jeremy Nguyen,,,"
